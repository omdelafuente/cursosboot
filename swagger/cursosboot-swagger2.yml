swagger: '2.0'
info:
  version: '1.0.0'
  title: 'cursosboot - API Documentation'
  description: 'This is the sample API contract for the [cursosboot](https://github.com/cdelhoyo) project.'
tags:
  - name: courses
    description: Access to courses and their correspondent subjects
  - name: teachers
    description: Operations with the teachers that teach the courses
schemes: 
  - http
paths:
  /courses:
    get:
      tags:
        - courses
      summary: Returns all ACTIVE (active=true) courses from the system
      description: Results can be paged and sorted.
      operationId: findCourses
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        description: Substring value to look for in all "name" fields of the Course objects
        required: false
        type: string
      - name: page
        in: query
        description: Results page you want to retrieve (0...N)
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        description: Number of records per page
        required: false
        type: integer
        format: int32
      - name: sort
        in: query
        description: 'Sorting criteria in the format: property(,asc | desc). Default sort order is ascending. Multiple sort criteria are supported.'
        required: false
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              content:
                description: List of courses
                type: array
                items:
                  $ref: '#/definitions/Course'
              last:
                type: boolean
                description: If the retrieved page is the last one
                example: false
              totalPages:
                type: integer
                description: Total number of existing pages
                example: 5
              totalElements:
                type: integer
                description: Total number of existing elements
                example: 5
              size:
                type: integer
                description: Number of elements in one page
                example: 1
              number:
                type: integer
                description: Number of the retrieved page
                example: 0
              first:
                type: boolean
                description: If the retrieved page is the first one
                example: true
              sort:
                type: object
                description: Sorting state
                properties:
                  sorted:
                    type: boolean
                    example: true
                  unsorted:
                    type: boolean
                    example: false
              numberOfElements:
                type: integer
                description: Number of elements retrieved
                example: 5
  /courses/{id}:
    get:
      tags:
        - courses
      summary: Find course by ID
      description: Returns a single Course.
      operationId: get
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: ID of course to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/Course'
        '400':
          description: Invalid ID supplied
  /courses/{id}/subjects:
    get:
      tags:
        - courses
      summary: Returns subjects from the specified course
      description: Results can be paged and sorted.
      operationId: findSubjects
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: ID of course which subjects to return
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          description: Substring value to look for in all "name" fields of the Subject objects
          required: false
          type: string
        - name: page
          in: query
          description: Results page you want to retrieve (0...N)
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Number of records per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc | desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              content:
                description: List of subjects
                type: array
                items:
                  $ref: '#/definitions/Subject'
              last:
                type: boolean
                description: If the retrieved page is the last one
                example: false
              totalPages:
                type: integer
                description: Total number of existing pages
                example: 5
              totalElements:
                type: integer
                description: Total number of existing elements
                example: 5
              size:
                type: integer
                description: Number of elements in one page
                example: 1
              number:
                type: integer
                description: Number of the retrieved page
                example: 0
              first:
                type: boolean
                description: If the retrieved page is the first one
                example: true
              sort:
                type: object
                description: Sorting state
                properties:
                  sorted:
                    type: boolean
                    example: true
                  unsorted:
                    type: boolean
                    example: false
              numberOfElements:
                type: integer
                description: Number of elements retrieved
                example: 5
    post:
      tags:
        - courses
      summary: Adds a new subject to the specified course
      description: Request body must be the Subject object to add
      operationId: addSubject
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
        - name: id
          in: path
          description: ID of course to which add the subject
          required: true
          type: integer
          format: int64
        - in: body
          name: subject
          description: Subject to add
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              name:
                type: string
                example: Scrum
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/Subject'
  /teachers:
    get:
      tags:
        - teachers
      summary: Returns all teachers from the system
      description: Results can be paged and sorted.
      operationId: findTeachers
      produces:
      - application/json
      parameters:
        - name: name
          in: query
          description: Substring value to look for in all "name" fields of the Teacher objects
          required: false
          type: string
        - name: page
          in: query
          description: Results page you want to retrieve (0...N)
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Number of records per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc | desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              content:
                description: List of teachers
                type: array
                items:
                  $ref: '#/definitions/Teacher'
              last:
                type: boolean
                description: If the retrieved page is the last one
                example: false
              totalPages:
                type: integer
                description: Total number of existing pages
                example: 3
              totalElements:
                type: integer
                description: Total number of existing elements
                example: 3
              size:
                type: integer
                description: Number of elements in one page
                example: 1
              number:
                type: integer
                description: Number of the retrieved page
                example: 0
              first:
                type: boolean
                description: If the retrieved page is the first one
                example: true
              sort:
                type: object
                description: Sorting state
                properties:
                  sorted:
                    type: boolean
                    example: true
                  unsorted:
                    type: boolean
                    example: false
              numberOfElements:
                type: integer
                description: Number of elements retrieved
                example: 5
    post:
      tags:
        - teachers
      summary: Adds a new teacher
      description: Request body must be the Teacher object to add
      operationId: add
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: body
        required: true
        name: teacher
        description: Teacher to add
        schema:
          $ref: '#/definitions/Teacher'
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/Teacher'
  /teachers/{id}:
    get:
      tags:
        - teachers
      summary: Find teacher by ID
      description: Returns a single Teacher.
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: ID of teacher to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/Teacher'
        '400':
          description: Invalid ID supplied
  /teachers/{id}/courses:
    get:
      tags:
        - teachers
      summary: Returns the courses teached by the specified teacher
      description: Results can be paged and sorted.
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: ID of teacher which courses to return
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          description: Substring value to look for in all "name" fields of the Course objects
          required: false
          type: string
        - name: page
          in: query
          description: Results page you want to retrieve (0...N)
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Number of records per page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc | desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              content:
                description: List of courses
                type: array
                items:
                  $ref: '#/definitions/Course'
              last:
                type: boolean
                description: If the retrieved page is the last one
                example: false
              totalPages:
                type: integer
                description: Total number of existing pages
                example: 5
              totalElements:
                type: integer
                description: Total number of existing elements
                example: 5
              size:
                type: integer
                description: Number of elements in one page
                example: 1
              number:
                type: integer
                description: Number of the retrieved page
                example: 0
              first:
                type: boolean
                description: If the retrieved page is the first one
                example: true
              sort:
                type: object
                description: Sorting state
                properties:
                  sorted:
                    type: boolean
                    example: true
                  unsorted:
                    type: boolean
                    example: false
              numberOfElements:
                type: integer
                description: Number of elements retrieved
                example: 5
    post:
      tags:
        - teachers
      summary: Adds a new course to the specified teacher
      description: Request body must be the course to add
      operationId: addCourse
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: ID of teacher to which add the course
          required: true
          type: integer
          format: int64
        - name: course
          in: body
          description: Course to add
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              name:
                type: string
                example: Backup and restore with GitLab
              active:
                type: boolean
                example: true
              level:
                type: string
                example: BEGINNER
      responses:
        '200':
          description: 'OK'
          schema:
           $ref: '#/definitions/Course'
definitions:
  Course:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Backup and restore with GitLab
      active:
        type: boolean
        example: true
      level:
        $ref: '#/definitions/Level'
      teacher:
        $ref: '#/definitions/Teacher'
  Teacher:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Alfredo Rubiales
  Subject:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Scrum
      course:
        $ref: '#/definitions/Course'
  Level:
    type: string
    enum:
      - BEGINNER
      - ELEMENTARY
      - INTERMEDIATE
      - ADVANCED
      - PROFICIENT